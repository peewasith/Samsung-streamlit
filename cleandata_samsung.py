# -*- coding: utf-8 -*-
"""CleanData_Samsung

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DbLJegR4PemwXeZH0Pl3iOGyRrt-AcZE
"""

import pandas as pd
from sklearn import tree

df = pd.read_excel('/content/Mockup_Samsung_Data.xlsx')

df.head()

df['ความสำคัญของกล้อง'].value_counts()

df['ความสำคัญของกล้อง'].replace('สูง','1',inplace=True)
df['ความสำคัญของกล้อง'].replace('ต่ำ','2',inplace=True)
df['ความสำคัญของกล้อง'].replace('กลาง','3',inplace=True)

df['ความสำคัญของกล้อง'].value_counts()

df['ขนาดหน้าจอ'].value_counts()

df['ขนาดหน้าจอ'].replace('เล็ก (<6.0")','1',inplace=True)
df['ขนาดหน้าจอ'].replace('กลาง (6.0–6.7")','2',inplace=True)
df['ขนาดหน้าจอ'].replace('ใหญ่ (>6.7")','3',inplace=True)

df['ขนาดหน้าจอ'].value_counts()

df['ต้องการ S Pen'].value_counts()

df['ต้องการ S Pen'].replace('ไม่ใช่','N',inplace=True)
df['ต้องการ S Pen'].replace('ใช่','Y',inplace=True)

df['ต้องการ S Pen'].value_counts()

df['ชอบจอพับได้'].value_counts()

df['ชอบจอพับได้'].replace('ไม่ใช่','N',inplace=True)
df['ชอบจอพับได้'].replace('ใช่','Y',inplace=True)

df['ชอบจอพับได้'].value_counts()

df['ชอบโทรศัพท์ที่ใช้อยู่ปัจจุบันหรือไม่'].value_counts()

df['ชอบโทรศัพท์ที่ใช้อยู่ปัจจุบันหรือไม่'].replace('ไม่ใช่','Dislike',inplace=True)
df['ชอบโทรศัพท์ที่ใช้อยู่ปัจจุบันหรือไม่'].replace('ใช่','Like',inplace=True)

df['ชอบโทรศัพท์ที่ใช้อยู่ปัจจุบันหรือไม่'].value_counts()

df.head()

df['เพศ'].value_counts()

หญิง = 0
ชาย = 1
อื่นๆ = 2

def transform_gender(val):
    if val == 'ชาย':
        return 1
    elif val == 'หญิง':
        return 0
    else:
        return 2  # สำหรับเพศอื่น

df['เพศ'] = df['เพศ'].apply(transform_gender)

df.head()

df['ความสำคัญของกล้อง'] = df['ความสำคัญของกล้อง'].astype(int)

df['ขนาดหน้าจอ'] = df['ขนาดหน้าจอ'].astype(int)

df.dtypes

df['ต้องการ S Pen'].replace('N','0',inplace=True)
df['ต้องการ S Pen'].replace('Y','1',inplace=True)

df['ต้องการ S Pen'].value_counts()

df['ต้องการ S Pen'] = df['ต้องการ S Pen'].astype(int)

df['ชอบจอพับได้'].replace('N','0',inplace=True)
df['ชอบจอพับได้'].replace('Y','1',inplace=True)

df['ชอบจอพับได้'].value_counts()

df['ชอบจอพับได้'] = df['ชอบจอพับได้'].astype(int)

df.dtypes

df['การใช้งานหลัก'].value_counts()

df['การใช้งานหลัก'].replace('ใช้ทั่วไป','1',inplace=True)
df['การใช้งานหลัก'].replace('ทำงาน','2',inplace=True)
df['การใช้งานหลัก'].replace('เล่นเกม','3',inplace=True)
df['การใช้งานหลัก'].replace('ถ่ายรูป','4',inplace=True)

df['การใช้งานหลัก'] = df['การใช้งานหลัก'].astype(int)

df['การใช้งานหลัก'].value_counts()

def data_cleansing():
  df.drop('เพศ', axis=1, inplace=True)

df.drop('เพศ', axis=1, inplace=True)

df.head()

def data_cleansing():
  df.drop('อายุ (ปี)', axis=1, inplace=True)

df.drop('อายุ (ปี)', axis=1, inplace=True)

df.head()

df['งบประมาณ (บาท)'].value_counts()

df['งบประมาณ (บาท)'].replace('0–9,999','0',inplace=True)
df['งบประมาณ (บาท)'].replace('10,000–25,000','1',inplace=True)
df['งบประมาณ (บาท)'].replace('40,001–60,000','2',inplace=True)
df['งบประมาณ (บาท)'].replace('25,001–40,000','3',inplace=True)

df['งบประมาณ (บาท)'] = df['งบประมาณ (บาท)'].astype(int)

df.head()

feature_cols = ['งบประมาณ (บาท)','การใช้งานหลัก','ความสำคัญของกล้อง','ขนาดหน้าจอ','ต้องการ S Pen','ชอบจอพับได้']
X = df[['งบประมาณ (บาท)','การใช้งานหลัก','ความสำคัญของกล้อง','ขนาดหน้าจอ','ต้องการ S Pen','ชอบจอพับได้']]
y = df['ใช้ Samsung รุ่นไหนอยู่ปัจจุบัน']

X.head()

y

clf = tree.DecisionTreeClassifier()

clf = clf.fit(X,y)

text_representation = tree.export_text(clf, feature_names=feature_cols)
print(text_representation)

x_test = pd.DataFrame( {'งบประมาณ (บาท)' : [3] ,
                         'การใช้งานหลัก' : [2],
                         'ความสำคัญของกล้อง' : [3],
                         'ขนาดหน้าจอ' : [2],
                         'ต้องการ S Pen' : [1],
                         'ชอบจอพับได้' : [1]
                         } )

x_test

clf.predict(x_test)

x_test = pd.DataFrame( {'งบประมาณ (บาท)' : [4] ,
                         'การใช้งานหลัก' : [3],
                         'ความสำคัญของกล้อง' : [1],
                         'ขนาดหน้าจอ' : [1],
                         'ต้องการ S Pen' : [2],
                         'ชอบจอพับได้' : [2]
                         } )

x_test

clf.predict(x_test)

x_test = pd.DataFrame( {'งบประมาณ (บาท)' : [1] ,
                         'การใช้งานหลัก' : [1],
                         'ความสำคัญของกล้อง' : [1],
                         'ขนาดหน้าจอ' : [1],
                         'ต้องการ S Pen' : [1],
                         'ชอบจอพับได้' : [1]
                         } )

x_test

clf.predict(x_test)

df.head(100)

x_test = pd.DataFrame( {'งบประมาณ (บาท)' : [4] ,
                         'การใช้งานหลัก' : [3],
                         'ความสำคัญของกล้อง' : [3],
                         'ขนาดหน้าจอ' : [3],
                         'ต้องการ S Pen' : [2],
                         'ชอบจอพับได้' : [2]
                         } )

x_test

clf.predict(x_test)

x_test = pd.DataFrame( {'งบประมาณ (บาท)' : [2.5] ,
                         'การใช้งานหลัก' : [3.5],
                         'ความสำคัญของกล้อง' : [2.5],
                         'ขนาดหน้าจอ' : [1.5],
                         'ต้องการ S Pen' : [0.5],
                         'ชอบจอพับได้' : [0.5]
                         } )

x_test

clf.predict(x_test)